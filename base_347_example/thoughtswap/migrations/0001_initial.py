# Generated by Django 5.0.11 on 2025-04-08 14:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Facilitator",
            fields=[
                ("facilitator_id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=255, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=20)),
                ("last_name", models.CharField(blank=True, max_length=10)),
                ("email", models.EmailField(blank=True, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name="Participant",
            fields=[
                ("participant_id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=255, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=20)),
                ("last_name", models.CharField(blank=True, max_length=10)),
                ("email", models.EmailField(blank=True, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                ("post_id", models.AutoField(primary_key=True, serialize=False)),
                ("post_date", models.DateTimeField(auto_now_add=True)),
                (
                    "facilitator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="thoughtswap.facilitator",
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        default="No Participants", to="thoughtswap.participant"
                    ),
                ),
            ],
            options={
                "ordering": ["post_date"],
            },
        ),
        migrations.CreateModel(
            name="Channel",
            fields=[
                ("channel_id", models.AutoField(primary_key=True, serialize=False)),
                ("channel_date", models.DateTimeField(auto_now_add=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="thoughtswap.facilitator",
                    ),
                ),
                (
                    "participants",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="thoughtswap.participant",
                    ),
                ),
                (
                    "posts",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="thoughtswap.post",
                    ),
                ),
            ],
            options={
                "ordering": ["channel_date"],
            },
        ),
        migrations.CreateModel(
            name="Response",
            fields=[
                ("response_id", models.AutoField(primary_key=True, serialize=False)),
                ("response_content", models.TextField()),
                ("response_date", models.DateTimeField(auto_now_add=True)),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="thoughtswap.participant",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="post",
            name="responses",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="post_responses",
                to="thoughtswap.response",
            ),
        ),
    ]
